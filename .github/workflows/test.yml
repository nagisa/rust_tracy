concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, repoened, synchronize]

jobs:
  native-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        rust_toolchain: [nightly, stable, 1.70.0]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        flags: [
          "",
          "--release",
          "--no-default-features",
          "--features=enable,fibers,system-tracing,context-switch-tracing,sampling,code-transfer,broadcast,only-localhost,only-ipv4,timer-fallback,ondemand,manual-lifetime,delayed-init,callstack-inlines",
          "--features=manual-lifetime"]
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - run: rustup install ${{ matrix.rust_toolchain }} --profile=minimal
      - run: rustup default ${{ matrix.rust_toolchain }}
      - run: cargo test ${{ matrix.flags }} -- --nocapture
        env:
          TRACY_NO_INVARIANT_CHECK: 1
  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup install nightly --profile=minimal
      - run: rustup default nightly
      - run: cargo rustdoc --all-features -p tracy-client-sys -Zunstable-options --config 'build.rustdocflags=["--cfg", "tracy_client_sys_docs", "-D", "rustdoc::broken_intra_doc_links"]'
      - run: cargo rustdoc --all-features -p tracy-client -Zunstable-options --config 'build.rustdocflags=["--cfg", "tracy_client_docs", "-D", "rustdoc::broken_intra_doc_links"]'
      - run: cargo rustdoc --all-features -p tracing-tracy -Zunstable-options --config 'build.rustdocflags=["--cfg", "tracing_tracy_docs", "-D", "rustdoc::broken_intra_doc_links"]'
